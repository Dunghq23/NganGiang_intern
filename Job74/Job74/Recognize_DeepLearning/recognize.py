# -*- coding: utf-8 -*-
"""recognize.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SLYoXjms-ESB38XJEQksTlqzSHnlZJE5
"""

# !pip install tensorflow keras
# !pip install h5py
# !pip install numpy opencv-python matplotlib scipy

import cv2
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import load_model
import absl.logging

def nhan_dien_ky_tu(duong_dan_anh, model_path, img_width=64, img_height=64, grayscale=True):
    # Tải mô hình đã huấn luyện
    model = load_model(model_path)

    # Đọc và tiền xử lý ảnh
    if grayscale:
        img = cv2.imread(duong_dan_anh, cv2.IMREAD_GRAYSCALE)
        img = cv2.resize(img, (img_width, img_height))
        img = np.expand_dims(img, axis=-1)  # Thêm kênh cho grayscale
    else:
        img = cv2.imread(duong_dan_anh)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        img = cv2.resize(img, (img_width, img_height))

    # Chuẩn hóa ảnh
    img = img.astype('float32') / 255.0

    # Thêm chiều batch
    img = np.expand_dims(img, axis=0)

    # Dự đoán
    prediction = model.predict(img)
    predicted_class = np.argmax(prediction, axis=1)[0]
    probability = np.max(prediction)

    # Lấy nhãn tương ứng
    # Bạn cần cung cấp một từ điển ánh xạ từ chỉ số sang nhãn
    idx_to_label = {0: '0', 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 7: '7', 8: '8', 9: '9',
                   10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F', 16: 'G', 17: 'H',
                   18: 'K', 19: 'L', 20: 'M', 21: 'N', 22: 'P', 23: 'R', 24: 'S', 25: 'T',
                   26: 'U', 27: 'V', 28: 'X', 29: 'Y', 30: 'Z'}

    predicted_label = idx_to_label[predicted_class]

    return predicted_label, probability

absl.logging.set_verbosity(absl.logging.ERROR)

# Danh sách ảnh cần nhận diện
image_paths = [
    "0/0000_00532_b_plate_0_0_char_08.png",
    "2/0000_05696_b_plate_0_0_char_03.png",
    "7/0005_00512_b_plate_0_0_char_07.png",
    "A/0138_01676_b_plate_0_0_char_03.png",
    "B/0009_02194_b_plate_0_0_char_03.png",
    "C/0000_06886_b_plate_0_0_char_03.png",
    "D/0112_01081_b_plate_0_0_char_02.png",
    "E/0000_02187_b_plate_0_0_char_02.png",
    "F/0002_02554_b_plate_0_0_char_03.png",
    "G/0022_01753_b_plate_0_0_char_02.png",
    "H/0004_06801_b_plate_0_0_char_02.png",
    "P/0000_00532_b_plate_0_0_char_02.png",
    "U/0112_06759_b_plate_0_0_char_02.png",
    "V/0003_07398_b_plate_0_0_char_02.png",
    "X/0053_01877_b_plate_0_0_char_02.png",
    "Y/0124_00307_b_plate_0_0_char_02.png",
    "Z/0041_00697_b_plate_0_0_char_02.png",
]

# Đường dẫn thư mục gốc và mô hình
base_path = "../labeled_images/"
model_path = "./model_nhan_dang_bien_so_final.h5"

# Duyệt qua danh sách ảnh và nhận diện ký tự
for img in image_paths:
    full_path = f"{base_path}{img}"
    ky_tu, do_tin_cay = nhan_dien_ky_tu(full_path, model_path)
    print(f"Ký tự: {ky_tu}, Độ tin cậy: {do_tin_cay*100:.2f}%")